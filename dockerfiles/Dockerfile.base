

ENV DEBIAN_FRONTEND=noninteractive

# install bunch of packages
COPY apt.list .

# update, add ppa, install and cleanup
RUN apt-get update --yes --quiet --fix-missing \
    && apt-get install --quiet --yes software-properties-common \
    && apt-get upgrade --yes --quiet \
    && add-apt-repository ppa:cartavis-team/carta \
    && apt-get update --yes --quiet \
    && apt-get install --yes --quiet $(cat apt.list) \
    && apt-get clean --yes \
    && apt-get autoremove --purge --quiet --yes \
    && rm -rf /var/lib/apt/lists/* /var/tmp/*
# nsswitch for correct sss lookup
ADD nsswitch.conf /etc/

# install micromamba and initialize
ARG PYTHON_VERSION=3.10

ENV CONDA_DIR=/opt/conda
ENV PATH="${CONDA_DIR}/bin:${PATH}"

COPY condarc "${CONDA_DIR}/.condarc"

RUN set -x \
    && curl -Ls https://micromamba.snakepit.net/api/micromamba/linux-64/latest | tar -xvj bin/micromamba \
    && ./bin/micromamba install \
        --root-prefix="${CONDA_DIR}" \
        --prefix="${CONDA_DIR}" \
        --yes \
        python=${PYTHON_VERSION} mamba pixi

# conda profile scripts by default
RUN ln -s ${CONDA_DIR}/etc/profile.d/conda.sh /etc/profile.d/conda.sh


COPY channels.list .
RUN sed -i -e '/conda-forge/d' channels.list \
    && [ $(wc -l channels.list | awk '{print $1}') != 0 ] \
    && cat channels.list | uniq | awk 'NF' \
       | xargs -n1 conda config --system --prepend channels \
    || echo "no new channels to add"

COPY env.yml .
RUN mamba update --all --yes \
    && mamba env update -n base --file env.yml \
    && mamba clean --all --quiet --force --yes

COPY pinned .
RUN touch ${CONDA_DIR}/conda-meta/pinned \
    && cat pinned ${CONDA_DIR}/conda-meta/pinned | sort | uniq > pinned.new \
    && cp pinned.new ${CONDA_DIR}/conda-meta/pinned

COPY Dockerfile .
RUN mkdir -p /build-info \
    && for f in env.yml apt.list Dockerfile; do \
       [[ -e ${f} ]] && cp ${f} /build-info/ ; done \
    && rm -rf /tmp/* ~/.cache/*
ENTRYPOINT ["tini", "-g", "--"]
